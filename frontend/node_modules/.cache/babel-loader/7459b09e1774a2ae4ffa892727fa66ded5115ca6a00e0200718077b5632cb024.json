{"ast":null,"code":"var _jsxFileName = \"/root/tennis-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { AppBar, Toolbar, Typography, Container, CircularProgress } from '@mui/material';\nimport MatchList from './components/MatchList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Initial data load from REST API\n    const fetchInitialData = async () => {\n      try {\n        console.log('Fetching initial data...');\n        const response = await axios.get('http://localhost:8000/api/tennis');\n        console.log('Received data:', response.data);\n        setMatches(response.data.matches);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to fetch initial data');\n        setLoading(false);\n      }\n    };\n\n    // WebSocket connection for real-time updates\n    const connectWebSocket = () => {\n      console.log('Connecting to WebSocket...');\n      const ws = new WebSocket('ws://localhost:8000/ws');\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n      };\n      ws.onmessage = event => {\n        console.log('WebSocket message received:', event.data);\n        const data = JSON.parse(event.data);\n        setMatches(data.matches);\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error');\n      };\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        // Try to reconnect after 5 seconds\n        setTimeout(connectWebSocket, 5000);\n      };\n      return () => {\n        ws.close();\n      };\n    };\n    fetchInitialData();\n    const cleanup = connectWebSocket();\n    return cleanup;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Tennis Bot Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 3\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MatchList, {\n        matches: matches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YgnPwiiwgTHXx31phIhN1rv+1Dw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppBar","Toolbar","Typography","Container","CircularProgress","MatchList","jsxDEV","_jsxDEV","App","_s","matches","setMatches","loading","setLoading","error","setError","fetchInitialData","console","log","response","get","data","err","connectWebSocket","ws","WebSocket","onopen","onmessage","event","JSON","parse","onerror","onclose","setTimeout","close","cleanup","className","children","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","color","_c","$RefreshReg$"],"sources":["/root/tennis-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { AppBar, Toolbar, Typography, Container, CircularProgress } from '@mui/material';\nimport MatchList from './components/MatchList';\nimport './App.css';\n\nfunction App() {\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Initial data load from REST API\n    const fetchInitialData = async () => {\n      try {\n        console.log('Fetching initial data...');\n        const response = await axios.get('http://localhost:8000/api/tennis');\n        console.log('Received data:', response.data);\n        setMatches(response.data.matches);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to fetch initial data');\n        setLoading(false);\n      }\n    };\n\n    // WebSocket connection for real-time updates\n    const connectWebSocket = () => {\n      console.log('Connecting to WebSocket...');\n      const ws = new WebSocket('ws://localhost:8000/ws');\n      \n      ws.onopen = () => {\n        console.log('WebSocket connected');\n      };\n\n      ws.onmessage = (event) => {\n        console.log('WebSocket message received:', event.data);\n        const data = JSON.parse(event.data);\n        setMatches(data.matches);\n      };\n\n      ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error');\n      };\n\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        // Try to reconnect after 5 seconds\n        setTimeout(connectWebSocket, 5000);\n      };\n\n      return () => {\n        ws.close();\n      };\n    };\n\n    fetchInitialData();\n    const cleanup = connectWebSocket();\n\n    return cleanup;\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Tennis Bot Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container sx={{ mt: 3 }}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Typography color=\"error\">{error}</Typography>\n        ) : (\n          <MatchList matches={matches} />\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}