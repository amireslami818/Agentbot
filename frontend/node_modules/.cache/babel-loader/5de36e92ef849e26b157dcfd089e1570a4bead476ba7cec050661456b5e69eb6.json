{"ast":null,"code":"var _jsxFileName = \"/root/tennis-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { AppBar, Toolbar, Typography, Container, CircularProgress, Button, Box } from '@mui/material';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport MatchList from './components/MatchList';\nimport RawDataViewer from './components/RawDataViewer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Initial data load from REST API\n    const fetchInitialData = async () => {\n      try {\n        var _response$data;\n        console.log('Fetching initial data...');\n        const response = await axios.get('http://localhost:8000/api/tennis');\n        console.log('Received data:', response.data);\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.matches) {\n          setMatches(response.data.matches);\n        } else {\n          console.error('No matches data in response:', response.data);\n          setError('No matches data available');\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(`Failed to fetch initial data: ${err.message}`);\n        setLoading(false);\n      }\n    };\n\n    // WebSocket connection for real-time updates\n    const connectWebSocket = () => {\n      console.log('Connecting to WebSocket...');\n      const ws = new WebSocket('ws://localhost:8000/ws');\n      let reconnectTimer = null;\n      ws.onopen = () => {\n        console.log('WebSocket connected successfully');\n        setError(null); // Clear any previous errors on successful connection\n      };\n      ws.onmessage = event => {\n        try {\n          console.log('WebSocket message received');\n          const data = JSON.parse(event.data);\n          if (data !== null && data !== void 0 && data.matches) {\n            console.log(`Received ${data.matches.length} matches`);\n            setMatches(data.matches);\n          } else {\n            console.error('Invalid data format received:', data);\n          }\n        } catch (err) {\n          console.error('Error processing WebSocket message:', err);\n        }\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error - retrying...');\n      };\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        // Try to reconnect after 5 seconds\n        reconnectTimer = setTimeout(connectWebSocket, 5000);\n      };\n      return () => {\n        if (reconnectTimer) {\n          clearTimeout(reconnectTimer);\n        }\n        ws.close();\n      };\n    };\n    fetchInitialData();\n    const cleanup = connectWebSocket();\n    return cleanup;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Tennis Bot Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              component: Link,\n              to: \"/\",\n              children: \"Matches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              component: Link,\n              to: \"/raw-data\",\n              children: \"Raw Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Container, {\n            sx: {\n              mt: 3\n            },\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(MatchList, {\n              matches: matches\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/raw-data\",\n          element: /*#__PURE__*/_jsxDEV(RawDataViewer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YgnPwiiwgTHXx31phIhN1rv+1Dw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppBar","Toolbar","Typography","Container","CircularProgress","Button","Box","BrowserRouter","Router","Routes","Route","Link","MatchList","RawDataViewer","jsxDEV","_jsxDEV","App","_s","matches","setMatches","loading","setLoading","error","setError","fetchInitialData","_response$data","console","log","response","get","data","err","message","connectWebSocket","ws","WebSocket","reconnectTimer","onopen","onmessage","event","JSON","parse","length","onerror","onclose","setTimeout","clearTimeout","close","cleanup","children","className","position","variant","sx","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","color","component","to","path","element","mt","_c","$RefreshReg$"],"sources":["/root/tennis-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { AppBar, Toolbar, Typography, Container, CircularProgress, Button, Box } from '@mui/material';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport MatchList from './components/MatchList';\nimport RawDataViewer from './components/RawDataViewer';\nimport './App.css';\n\nfunction App() {\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Initial data load from REST API\n    const fetchInitialData = async () => {\n      try {\n        console.log('Fetching initial data...');\n        const response = await axios.get('http://localhost:8000/api/tennis');\n        console.log('Received data:', response.data);\n        if (response.data?.matches) {\n          setMatches(response.data.matches);\n        } else {\n          console.error('No matches data in response:', response.data);\n          setError('No matches data available');\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(`Failed to fetch initial data: ${err.message}`);\n        setLoading(false);\n      }\n    };\n\n    // WebSocket connection for real-time updates\n    const connectWebSocket = () => {\n      console.log('Connecting to WebSocket...');\n      const ws = new WebSocket('ws://localhost:8000/ws');\n      let reconnectTimer = null;\n      \n      ws.onopen = () => {\n        console.log('WebSocket connected successfully');\n        setError(null); // Clear any previous errors on successful connection\n      };\n\n      ws.onmessage = (event) => {\n        try {\n          console.log('WebSocket message received');\n          const data = JSON.parse(event.data);\n          if (data?.matches) {\n            console.log(`Received ${data.matches.length} matches`);\n            setMatches(data.matches);\n          } else {\n            console.error('Invalid data format received:', data);\n          }\n        } catch (err) {\n          console.error('Error processing WebSocket message:', err);\n        }\n      };\n\n      ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error - retrying...');\n      };\n\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        // Try to reconnect after 5 seconds\n        reconnectTimer = setTimeout(connectWebSocket, 5000);\n      };\n\n      return () => {\n        if (reconnectTimer) {\n          clearTimeout(reconnectTimer);\n        }\n        ws.close();\n      };\n    };\n\n    fetchInitialData();\n    const cleanup = connectWebSocket();\n\n    return cleanup;\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n              Tennis Bot Dashboard\n            </Typography>\n            <Box>\n              <Button color=\"inherit\" component={Link} to=\"/\">\n                Matches\n              </Button>\n              <Button color=\"inherit\" component={Link} to=\"/raw-data\">\n                Raw Data\n              </Button>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        \n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              <Container sx={{ mt: 3 }}>\n                {loading ? (\n                  <CircularProgress />\n                ) : error ? (\n                  <Typography color=\"error\">{error}</Typography>\n                ) : (\n                  <MatchList matches={matches} />\n                )}\n              </Container>\n            } \n          />\n          <Route path=\"/raw-data\" element={<RawDataViewer />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AACrG,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QAAA,IAAAC,cAAA;QACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,kCAAkC,CAAC;QACpEH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAC5C,KAAAL,cAAA,GAAIG,QAAQ,CAACE,IAAI,cAAAL,cAAA,eAAbA,cAAA,CAAeP,OAAO,EAAE;UAC1BC,UAAU,CAACS,QAAQ,CAACE,IAAI,CAACZ,OAAO,CAAC;QACnC,CAAC,MAAM;UACLQ,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEM,QAAQ,CAACE,IAAI,CAAC;UAC5DP,QAAQ,CAAC,2BAA2B,CAAC;QACvC;QACAF,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZL,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAES,GAAG,CAAC;QAC1CR,QAAQ,CAAC,iCAAiCQ,GAAG,CAACC,OAAO,EAAE,CAAC;QACxDX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;MAC7BP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMO,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;MAClD,IAAIC,cAAc,GAAG,IAAI;MAEzBF,EAAE,CAACG,MAAM,GAAG,MAAM;QAChBX,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC;MAEDW,EAAE,CAACI,SAAS,GAAIC,KAAK,IAAK;QACxB,IAAI;UACFb,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;UACzC,MAAMG,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACF,KAAK,CAACT,IAAI,CAAC;UACnC,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEZ,OAAO,EAAE;YACjBQ,OAAO,CAACC,GAAG,CAAC,YAAYG,IAAI,CAACZ,OAAO,CAACwB,MAAM,UAAU,CAAC;YACtDvB,UAAU,CAACW,IAAI,CAACZ,OAAO,CAAC;UAC1B,CAAC,MAAM;YACLQ,OAAO,CAACJ,KAAK,CAAC,+BAA+B,EAAEQ,IAAI,CAAC;UACtD;QACF,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZL,OAAO,CAACJ,KAAK,CAAC,qCAAqC,EAAES,GAAG,CAAC;QAC3D;MACF,CAAC;MAEDG,EAAE,CAACS,OAAO,GAAIrB,KAAK,IAAK;QACtBI,OAAO,CAACJ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCC,QAAQ,CAAC,0CAA0C,CAAC;MACtD,CAAC;MAEDW,EAAE,CAACU,OAAO,GAAG,MAAM;QACjBlB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC;QACAS,cAAc,GAAGS,UAAU,CAACZ,gBAAgB,EAAE,IAAI,CAAC;MACrD,CAAC;MAED,OAAO,MAAM;QACX,IAAIG,cAAc,EAAE;UAClBU,YAAY,CAACV,cAAc,CAAC;QAC9B;QACAF,EAAE,CAACa,KAAK,CAAC,CAAC;MACZ,CAAC;IACH,CAAC;IAEDvB,gBAAgB,CAAC,CAAC;IAClB,MAAMwB,OAAO,GAAGf,gBAAgB,CAAC,CAAC;IAElC,OAAOe,OAAO;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjC,OAAA,CAACP,MAAM;IAAAyC,QAAA,eACLlC,OAAA;MAAKmC,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBlC,OAAA,CAACf,MAAM;QAACmD,QAAQ,EAAC,QAAQ;QAAAF,QAAA,eACvBlC,OAAA,CAACd,OAAO;UAAAgD,QAAA,gBACNlC,OAAA,CAACb,UAAU;YAACkD,OAAO,EAAC,IAAI;YAACC,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAE,CAAE;YAAAL,QAAA,EAAC;UAE9C;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb3C,OAAA,CAACT,GAAG;YAAA2C,QAAA,gBACFlC,OAAA,CAACV,MAAM;cAACsD,KAAK,EAAC,SAAS;cAACC,SAAS,EAAEjD,IAAK;cAACkD,EAAE,EAAC,GAAG;cAAAZ,QAAA,EAAC;YAEhD;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT3C,OAAA,CAACV,MAAM;cAACsD,KAAK,EAAC,SAAS;cAACC,SAAS,EAAEjD,IAAK;cAACkD,EAAE,EAAC,WAAW;cAAAZ,QAAA,EAAC;YAExD;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAET3C,OAAA,CAACN,MAAM;QAAAwC,QAAA,gBACLlC,OAAA,CAACL,KAAK;UACJoD,IAAI,EAAC,GAAG;UACRC,OAAO,eACLhD,OAAA,CAACZ,SAAS;YAACkD,EAAE,EAAE;cAAEW,EAAE,EAAE;YAAE,CAAE;YAAAf,QAAA,EACtB7B,OAAO,gBACNL,OAAA,CAACX,gBAAgB;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAClBpC,KAAK,gBACPP,OAAA,CAACb,UAAU;cAACyD,KAAK,EAAC,OAAO;cAAAV,QAAA,EAAE3B;YAAK;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,gBAE9C3C,OAAA,CAACH,SAAS;cAACM,OAAO,EAAEA;YAAQ;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAC/B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ;QACZ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACF3C,OAAA,CAACL,KAAK;UAACoD,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEhD,OAAA,CAACF,aAAa;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACzC,EAAA,CApHQD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAsHZ,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}